///$tab Main
SET ThousandSep='.';
SET DecimalSep=',';
SET MoneyThousandSep='.';
SET MoneyDecimalSep=',';
SET MoneyFormat='$ #.##0,00;-$ #.##0,00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='es-AR';
SET MonthNames='ene.;feb.;mar.;abr.;may.;jun.;jul.;ago.;sep.;oct.;nov.;dic.';
SET LongMonthNames='enero;febrero;marzo;abril;mayo;junio;julio;agosto;septiembre;octubre;noviembre;diciembre';
SET DayNames='lun.;mar.;mié.;jue.;vie.;sáb.;dom.';
SET LongDayNames='lunes;martes;miércoles;jueves;viernes;sábado;domingo';

let vAñoActual = Year(today());
let vAñoActualMenos1 = Year(addyears(today(),-1));
let vFechaDeCorte = monthend(addmonths(today(),-1));

Let vMoneda='P';

///$tab MAESTROS

// A COBRAR COPIAMOS LO DE LA APP ORIGINAL, POR QUE ES UN BODRIO
/*Cotizacion_dolar_hoy:
LOAD

	REPLACE( COTIZ_DOLAR_COMPRA, ',', '.' ) AS COTIZ_DOLAR_HOY
FROM
	[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_COTIZACION_DOLAR.QVD] (QVD);*/
	
	NoConcatenate
	Cotizacion_dolar_hoy:
	load
	max(MCZ_FECHA) AS MAX_FECHA,
	MCZ_MONEDA
	FROM
	[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_MONEDAS_COTIZACIONES_COMPLETA.QVD] (QVD)
	WHERE MCZ_MONEDA = '1' and MCZ_FECHA<='$(vFechaDeCorte)'
	GROUP BY MCZ_MONEDA
	;
	LEFT JOIN
	LOAD
	NUM(TRIM(MCZ_COTIZACION) )AS COTIZ_DOLAR_HOY,
	MCZ_FECHA AS MAX_FECHA,
	MCZ_MONEDA
	FROM
	[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_MONEDAS_COTIZACIONES_COMPLETA.QVD] (QVD);

LET vDolarFijacion =FieldValue('COTIZ_DOLAR_HOY',1);



NoConcatenate
PRECIOS_PIZARRA_AUX:
LOAD 
ESPECIE AS ESPECIE_CODIGO, 
MAX(ULT_FECHA) AS MERCADO_FECHA

FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
GROUP BY ESPECIE

;
LEFT JOIN
LOAD
ESPECIE AS ESPECIE_CODIGO, 
PRECIO AS MERCADO_COTIZACION_PRECIO,
ULT_FECHA AS MERCADO_FECHA
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
WHERE PIZARRA='PROS'
;


LEFT JOIN
LOAD
ESPECIE AS ESPECIE_CODIGO, 
PRECIO AS MERCADO_COTIZACION_PRECIO_AUX
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
//WHERE PIZARRA='PBB'
;


NoConcatenate
PRECIOS_PIZARRA:
LOAD 

ESPECIE_CODIGO, 
MAX(IF(ISNULL(MERCADO_COTIZACION_PRECIO),MERCADO_COTIZACION_PRECIO_AUX,MERCADO_COTIZACION_PRECIO)) AS MERCADO_COTIZACION_PRECIO_AUX
//MAX(MERCADO_COTIZACION_PRECIO) as MERCADO_COTIZACION_PRECIO
RESIDENT PRECIOS_PIZARRA_AUX 
GROUP BY ESPECIE_CODIGO;

LEFT JOIN
LOAD
ESPECIE AS ESPECIE_CODIGO, 
PRECIO AS MERCADO_COTIZACION_PRECIO_AUX,
ULT_FECHA AS MERCADO_FECHA,
PIZARRA AS MERCADO_PIZARRA
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
;




DROP TABLE PRECIOS_PIZARRA_AUX;


DROP TABLE Cotizacion_dolar_hoy;

NOCONCATENATE
PRODUCTORES:
LOAD
ENT_TIPO_ENTIDAD & ENT_CODIGO AS PRODUCTOR_CLAVE,
ENT_CODIGO AS PRODUCTOR_CODIGO,
ENT_NOMBRE AS PRODUCTOR_NOMBRE
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\Entidades.QVD] (QVD);


NoConcatenate
DESTINOS:
LOAD
PDE_CODIGO AS DESTINO_CODIGO,
PDE_DESCRIPCION AS DESTINO_DESCRIPCION
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\Procedencias_Destinos.QVD] (QVD);

NoConcatenate
ESPECIES_AUX:
LOAD
ESP_ESPECIE AS ESPECIE_CODIGO,
ESP_DESCRIPCION AS ESPECIE_DESCRIPCION
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\Especies.QVD] (QVD);
LEFT JOIN
LOAD
ECO_ESPECIE AS ESPECIE_CODIGO,
ECO_COSECHA AS COSECHA_CODIGO,
ECO_DESCRIPCION AS COSECHA_DESCRIPCION,
ECO_ESPECIE & ECO_COSECHA AS ESPECIE_CLAVE
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\Especies_Cosechas.QVD] (QVD);
LEFT JOIN
LOAD
ESPECIE AS ESPECIE_CODIGO,
COSECHA_VIGENTE 
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_COSECHAS_VIGENTES.QVD] (QVD);

LEFT JOIN
LOAD
ESPECIE_CODIGO, 
MERCADO_COTIZACION_PRECIO_AUX
RESIDENT PRECIOS_PIZARRA;

LEFT JOIN
LOAD
'GIRO' AS ESPECIE_CODIGO,
PRECIO AS MERCADO_COTIZACION_PRECIO_GIRO
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
WHERE PIZARRA='PROS' AND ESPECIE='GIRA'
;

NoConcatenate
ESPECIES:
LOAD *,
IF(ESPECIE_CODIGO='GIRO' AND ISNULL(MERCADO_COTIZACION_PRECIO_AUX),MERCADO_COTIZACION_PRECIO_GIRO,MERCADO_COTIZACION_PRECIO_AUX) AS MERCADO_COTIZACION_PRECIO
RESIDENT ESPECIES_AUX;

DROP TABLE ESPECIES_AUX;


NoConcatenate
EJERCICIOS_AUX:
LOAD

EJE_CODIGO AS EJERCICIO_CODIGO,
EJE_DESCRIPCION AS EJERCICIO_DESCRIPCION,
EJE_FECHA_INICIO AS EJERCICIO_FECHA_INICIO,
EJE_FECHA_FIN AS EJERCICIO_FECHA_FIN
FROM
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\Ejercicios.QVD] (QVD)

;

NoConcatenate
EJERCICIOS:
LOAD
*,ROWNO() AS EJERCICIO_ORDEN Resident EJERCICIOS_AUX Order BY  EJERCICIO_FECHA_INICIO ASC;

DROP TABLES EJERCICIOS_AUX,PRECIOS_PIZARRA;

NoConcatenate
PRECIOS_PIZARRAS:
LOAD
ESPECIE AS ESPECIE_CODIGO, 
PRECIO AS  PIZARRA_PRECIO,
ULT_FECHA AS PIZARRA_FECHA,
PIZARRA AS PIZARRA_CODIGO
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
;
///$tab CONTRATOS
NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX:
Load
	ESPECIE&COSECHA AS ESPECIE_CLAVE,
	ESPECIE AS CONTRATOS_ESPECIE,
	COSECHA AS CONTRATOS_COSECHA,
	COMPRA_VENTA AS CONTRATOS_CV,
	NUMERO_CONTRATO AS CONTRATOS_NUMERO,
		replace(NUMERO,'- ','-') AS CONTRATOS_CPTE,
		date(FECHA) AS CONTRATOS_FECHA,
	3&PRODUCTOR AS PRODUCTOR_CLAVE,
	PIZARRA AS CONTRATOS_PIZARRA,
	BOLETO AS CONTRATOS_BOLETO,
		IF(ISNULL(KG_SIN_CONT) OR KG_SIN_CONT=0 ,
		IF(ISNULL(KG_SC_FUTACT)OR KG_SC_FUTACT=0 ,KG_SC_FUTSIG,KG_SC_FUTACT),KG_SIN_CONT) AS CONTRATOS_KG_SIN_CONTABILIZAR,
	MONEDA AS CONTRATOS_MONEDA,
	TIPO_CAMBIO_DEL_DIA AS CONTRATOS_TC,
	PRECIO_SIN_VALORIZAR AS CONTRATOS_PRECIO_SIN_VALORIZAR,
	IF(MONEDA='P',PRECIO_SIN_VALORIZAR/'$(vDolarFijacion)',PRECIO_SIN_VALORIZAR) AS CONTRATOS_PRECIO,
	PRECIO_U$S_T AS  CONTRATOS_PRECIO_U$S,
	PRECIO_$_T AS CONTRATOS_PRECIO_$,
	KG_CONCERTADO AS CONTRATOS_KG_PACTADOS,
	FJC_KILOS_FIJADOS AS CONTRATOS_KG_FIJADOS,
	CCD_KILOS_FACTURADOS AS  CONTRATOS_KG_FACTURADOS,
	DESTINO AS DESTINO_CODIGO,
		date(FECHA_POSICION) AS CONTRATOS_FECHA_POSICION,
		DATE('01/'&RIGHT(FECHA_ENTREGA_DESDE,2)&'/'&LEFT(FECHA_ENTREGA_DESDE,4)) AS CONTRATOS_FECHA_DESDE_ENTREGA,
		DATE('01/'&RIGHT(FECHA_ENTREGA_HASTA,2)&'/'&LEFT(FECHA_ENTREGA_HASTA,4))  AS CONTRATOS_FECHA_HASTA_ENTREGA,
		YEAR(FECHA_POSICION) AS AÑO,
		MONTH(FECHA_POSICION) AS MES
from 
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_CEREAL_SIN_CONTABILIZAR.QVD] (QVD);

Left Join IntervalMatch (CONTRATOS_FECHA_POSICION)
Load
EJERCICIO_FECHA_INICIO,
EJERCICIO_FECHA_FIN
RESIDENT EJERCICIOS;

LEFT JOIN
LOAD
EJERCICIO_FECHA_INICIO,
EJERCICIO_FECHA_FIN,
EJERCICIO_CODIGO 
RESIDENT EJERCICIOS;

LEFT JOIN
LOAD DISTINCT
ESPECIE_CODIGO AS CONTRATOS_ESPECIE,
COSECHA_VIGENTE AS CONTRATOS_COSECHA_VIGENTE
RESIDENT ESPECIES;


NOCONCATENATE
EXCEL:
LOAD 
Posición AS EXCEL_Posición,
IF(LEFT(Posición,4)='MAÍZ','MAIZ',LEFT(Posición,4)) AS CONTRATOS_ESPECIE, // <- MOD
text(trim(RIGHT(Posición,7))) AS FECHA_COMPARATIVA_MATBA,
Cierre AS EXCEL_Cierre 
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EXCEL_PRECIOS_MATBA.xls]
(biff, embedded labels, table is Sheet$)
WHERE /*LEFT(Posición,4)<>'MAIZ' AND 
LEFT(Posición,6)<>'SOJA Q' AND *///AGREGADO
Posición LIKE '* ROS*'
;

/*
left join
load
Posición AS EXCEL_Posición,
IF(LEFT(Posición,8)='SOJA ROS','SOJA',NULL()) AS CONTRATOS_ESPECIE, // <- MOD
text(trim(RIGHT(Posición,7))) AS FECHA_COMPARATIVA_MATBA,
Cierre AS EXCEL_Cierre_AUX
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EXCEL_PRECIOS_MATBA.xls]
(biff, embedded labels, table is Sheet$)
WHERE LEFT(Posición,8)='SOJA ROS';
*/

DROP FIELDS EJERCICIO_FECHA_INICIO,EJERCICIO_FECHA_FIN FROM COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX;

NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2:
Load
*, 
IF(CONTRATOS_COSECHA>CONTRATOS_COSECHA_VIGENTE,'Futuros','Disponible') as CONTRATOS_DISPONIBLE_FUTUROS,
TEXT(TRIM(RIGHT(CONTRATOS_FECHA_POSICION,7))) AS FECHA_COMPARATIVA_MATBA

Resident COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX
;

LEFT JOIN
LOAD 
CONTRATOS_ESPECIE,
FECHA_COMPARATIVA_MATBA,
if(CONTRATOS_ESPECIE='MAIZ' or CONTRATOS_ESPECIE='SOJA',min(EXCEL_Cierre),max(EXCEL_Cierre)) AS EXCEL_Cierre
//if(CONTRATOS_ESPECIE='MAIZ',min(EXCEL_Cierre),IF(CONTRATOS_ESPECIE='SOJA',MIN(EXCEL_Cierre_AUX),max(EXCEL_Cierre))) AS EXCEL_Cierre
RESIDENT EXCEL
group by CONTRATOS_ESPECIE,FECHA_COMPARATIVA_MATBA;

LEFT JOIN
LOAD DESTINO_COD AS DESTINO_CODIGO,  
     PIZARRA AS CONTRATOS_PIZARRA_AUX
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EQUIVALENCIA_DEST_PIZARRA.xlsx]
(ooxml, embedded labels, table is Hoja1)
WHERE DESTINO_DESCRIPCION<>'Otros';

LEFT JOIN
LOAD  
     PIZARRA AS CONTRATOS_PIZARRA_GENERAL
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EQUIVALENCIA_DEST_PIZARRA.xlsx]
(ooxml, embedded labels, table is Hoja1)
WHERE DESTINO_DESCRIPCION='Otros';



NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR:
Load *,IF(ISNULL(CONTRATOS_PIZARRA_AUX),CONTRATOS_PIZARRA_GENERAL,CONTRATOS_PIZARRA_AUX) AS CONTRATOS_PIZARRA_CORREGIDA,
'1.01.05.01.09.000' as CONTRATOS_CUENTA_CONTABLE_TOMAS,
'Operaciones Pendientes de Granos' as CONTRATOS_CUENTA_CONTABLE_TOMAS_DESCRIPCION
resident 
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2
where CONTRATOS_FECHA<='$(vFechaDeCorte)'

;

LEFT JOIN
LOAD
ESPECIE AS CONTRATOS_ESPECIE, 
PRECIO AS CONTRATOS_PRECIO_MERCADO,
PIZARRA AS CONTRATOS_PIZARRA_CORREGIDA
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
;

//AGREGADO
LEFT JOIN
LOAD 
	 TRIM(ESPECIE) AS CONTRATOS_ESPECIE, 
     [CUENTA CONTABLE] AS CONTRATOS_CUENTA_CONTABLE, 
     DESCRIPCION AS CONTRATOS_CUENTA_CONTABLE_DESCRIPCION
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\CUENTAS_CONTABLES.xls]
(biff, embedded labels, table is Hoja1$);




Drop tables COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX,EXCEL,COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2;

///$tab ASIENTO CONTABLE
/*NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX:
Load
	ESPECIE&COSECHA AS ESPECIE_CLAVE,
	ESPECIE AS CONTRATOS_ESPECIE,
	COSECHA AS CONTRATOS_COSECHA,
	COMPRA_VENTA AS CONTRATOS_CV,
	NUMERO_CONTRATO AS CONTRATOS_NUMERO,
		replace(NUMERO,'- ','-') AS CONTRATOS_CPTE,
		date(FECHA) AS CONTRATOS_FECHA,
	3&PRODUCTOR AS PRODUCTOR_CLAVE,
	PIZARRA AS CONTRATOS_PIZARRA,
	BOLETO AS CONTRATOS_BOLETO,
		IF(ISNULL(KG_SIN_CONT) OR KG_SIN_CONT=0 ,
		IF(ISNULL(KG_SC_FUTACT)OR KG_SC_FUTACT=0 ,KG_SC_FUTSIG,KG_SC_FUTACT),KG_SIN_CONT) AS CONTRATOS_KG_SIN_CONTABILIZAR,
	MONEDA AS CONTRATOS_MONEDA,
	TIPO_CAMBIO_DEL_DIA AS CONTRATOS_TC,
	PRECIO_SIN_VALORIZAR AS CONTRATOS_PRECIO_SIN_VALORIZAR,
	IF(MONEDA='P',PRECIO_SIN_VALORIZAR/'$(vDolarFijacion)',PRECIO_SIN_VALORIZAR) AS CONTRATOS_PRECIO,
	PRECIO_U$S_T AS  CONTRATOS_PRECIO_U$S,
	PRECIO_$_T AS CONTRATOS_PRECIO_$,
	KG_CONCERTADO AS CONTRATOS_KG_PACTADOS,
	FJC_KILOS_FIJADOS AS CONTRATOS_KG_FIJADOS,
	CCD_KILOS_FACTURADOS AS  CONTRATOS_KG_FACTURADOS,
	DESTINO AS DESTINO_CODIGO,
		date(FECHA_POSICION) AS CONTRATOS_FECHA_POSICION,
		DATE('01/'&RIGHT(FECHA_ENTREGA_DESDE,2)&'/'&LEFT(FECHA_ENTREGA_DESDE,4)) AS CONTRATOS_FECHA_DESDE_ENTREGA,
		DATE('01/'&RIGHT(FECHA_ENTREGA_HASTA,2)&'/'&LEFT(FECHA_ENTREGA_HASTA,4))  AS CONTRATOS_FECHA_HASTA_ENTREGA,
		YEAR(FECHA_POSICION) AS AÑO,
		MONTH(FECHA_POSICION) AS MES
from 
[\\SRV-QV\D-QV\QlikView\Apps\QVD\EXT\DATA_CEREAL_SIN_CONTABILIZAR_NEW.QVD] (QVD);

Left Join IntervalMatch (CONTRATOS_FECHA_POSICION)
Load
EJERCICIO_FECHA_INICIO,
EJERCICIO_FECHA_FIN
RESIDENT EJERCICIOS;

LEFT JOIN
LOAD
EJERCICIO_FECHA_INICIO,
EJERCICIO_FECHA_FIN,
EJERCICIO_CODIGO 
RESIDENT EJERCICIOS;

LEFT JOIN
LOAD DISTINCT
ESPECIE_CODIGO AS CONTRATOS_ESPECIE,
COSECHA_VIGENTE AS CONTRATOS_COSECHA_VIGENTE
RESIDENT ESPECIES;


NOCONCATENATE
EXCEL:
LOAD 
Posición AS EXCEL_Posición,
IF(LEFT(Posición,4)='MAÍZ','MAIZ',LEFT(Posición,4)) AS CONTRATOS_ESPECIE, // <- MOD
text(trim(RIGHT(Posición,7))) AS FECHA_COMPARATIVA_MATBA,
Cierre AS EXCEL_Cierre 
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EXCEL_PRECIOS_MATBA.xls]
(biff, embedded labels, table is Sheet$)
WHERE LEFT(Posición,4)<>'MAIZ';


DROP FIELDS EJERCICIO_FECHA_INICIO,EJERCICIO_FECHA_FIN FROM COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX;

NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2:
Load
*, 
IF(CONTRATOS_COSECHA>CONTRATOS_COSECHA_VIGENTE,'Futuros','Disponible') as CONTRATOS_DISPONIBLE_FUTUROS,
TEXT(TRIM(RIGHT(CONTRATOS_FECHA_POSICION,7))) AS FECHA_COMPARATIVA_MATBA

Resident COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX
;

LEFT JOIN
LOAD 
CONTRATOS_ESPECIE,
FECHA_COMPARATIVA_MATBA,
if(CONTRATOS_ESPECIE='MAIZ' or CONTRATOS_ESPECIE='SOJA',min(EXCEL_Cierre),max(EXCEL_Cierre)) AS EXCEL_Cierre
//if(CONTRATOS_ESPECIE='MAIZ' or CONTRATOS_ESPECIE='SOJA',if(EXCEL_Posición='SOJA ROS*',min(EXCEL_Cierre),min(EXCEL_Cierre)),max(EXCEL_Cierre)) AS EXCEL_Cierre
RESIDENT EXCEL
group by CONTRATOS_ESPECIE,FECHA_COMPARATIVA_MATBA;

LEFT JOIN
LOAD DESTINO_COD AS DESTINO_CODIGO,  
     PIZARRA AS CONTRATOS_PIZARRA_AUX
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EQUIVALENCIA_DEST_PIZARRA.xlsx]
(ooxml, embedded labels, table is Hoja1)
WHERE DESTINO_DESCRIPCION<>'Otros';

LEFT JOIN
LOAD  
     PIZARRA AS CONTRATOS_PIZARRA_GENERAL
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\EQUIVALENCIA_DEST_PIZARRA.xlsx]
(ooxml, embedded labels, table is Hoja1)
WHERE DESTINO_DESCRIPCION='Otros';



NoConcatenate
COMPRAS_VENTAS_SIN_CONTABILIZAR:
Load *,IF(ISNULL(CONTRATOS_PIZARRA_AUX),CONTRATOS_PIZARRA_GENERAL,CONTRATOS_PIZARRA_AUX) AS CONTRATOS_PIZARRA_CORREGIDA,
'1.01.05.01.09.000' as CONTRATOS_CUENTA_CONTABLE_TOMAS,
'Operaciones Pendientes de Granos' as CONTRATOS_CUENTA_CONTABLE_TOMAS_DESCRIPCION
resident 
COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2
where CONTRATOS_FECHA<='$(vFechaDeCorte)'

;

LEFT JOIN
LOAD
ESPECIE AS CONTRATOS_ESPECIE, 
PRECIO AS CONTRATOS_PRECIO_MERCADO,
PIZARRA AS CONTRATOS_PIZARRA_CORREGIDA
FROM
[\\SRV-QV\D-QV\QLIKVIEW\Apps\QVD\EXT\DATA_MERCADO_COTIZACIONES.QVD]
(qvd)
;

//AGREGADO
LEFT JOIN
LOAD 
	 TRIM(ESPECIE) AS CONTRATOS_ESPECIE, 
     [CUENTA CONTABLE] AS CONTRATOS_CUENTA_CONTABLE, 
     DESCRIPCION AS CONTRATOS_CUENTA_CONTABLE_DESCRIPCION
FROM
[D:\QlikView\Apps\Interfaces\Valorizacion de Posiciones Abiertas\CUENTAS_CONTABLES.xls]
(biff, embedded labels, table is Hoja1$);




Drop tables COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX,EXCEL,COMPRAS_VENTAS_SIN_CONTABILIZAR_AUX2;

*/